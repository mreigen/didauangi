/* App Controllers */
function SelectionsCtrl($scope, $http) {
  $http.get('/api/v1/get_districts.json?city_id=ho-chi-minh&fields=id,name,lat,lng,zoom').
  success(function(data) {
    $scope.districts = data;
    //$scope.selectDistrict();
  });

  $http.get('/api/v1/get_maincats.json').
  success(function(data) {
    $scope.maincats = data;
    jQuery.each($scope.maincats, function(i, _maincat) {
      // get all subcats belong to that main cat
      $http.get('/api/v1/get_subcats.json?main_cat_id=' + _maincat["id"]).
      success(function(subcatData) {
        // this is to use with cat-selection's checkboxes ng-model
        subcatData.checked = false;
        _maincat.subcats = subcatData;
        // for tabbable to work with angularjs
        if (_maincat["id"]==1) _maincat.selected = true;
      });
    });
  });
  
  // for tabbable to work with angularjs
  $scope.selectMainCat = function(_maincat) {
    angular.forEach($scope.maincats, function(_maincat) {
      _maincat.selected = false;
    });
    _maincat.selected = true;
  }
  
  $scope.selectDistrict = function() {
    var district = jQuery.grep($scope.districts, function(e) {
      return e["id"] == $scope.selectedDistrictId;
    })[0];
    // set 'global' district var
    $scope.selectedDistrict = district;
    console.log($scope.selectedDistrict);
    $scope.loadPosition($scope.selectedDistrict, $scope.selectedSubCats);
  }
  
  $scope.selectedDistrict = {}
  $scope.selectedSubCats = [];
  $scope.selectedPlaces = [];
  
  $scope.selectSubCat = function(_subcat) {
    if (_subcat.checked == false) {
      // remove subcat from the selected sub cat array
      $scope.selectedSubCats = jQuery.grep($scope.selectedSubCats,
        function(selectedSubCat) {
          return selectedSubCat.id != _subcat.id;
        }
      );
    } else {
      $scope.selectedSubCats.push(_subcat);
    }
    console.log($scope.selectedSubCats);
    console.log($scope.selectedDistrict);
    $scope.loadPosition($scope.selectedDistrict, $scope.selectedSubCats);
  }
  
  $scope.predecate = function(subcat) {
    return subcat.name;
  }
  
  $scope.loadPosition = function(district, subcats) {
    console.log("district");
    console.log(district);
    console.log("subcats");
    console.log(subcats);
    if ((typeof district.id === "undefined") || (subcats === []))
      return;
    // get district's info
    var lat = district.lat.toString();
    var lng = district.lng.toString();
    var zoom = district.zoom.toString();
    
    // get places' info
    $http.get("/api/v1/get_places.json?district_id=" + district.id + "&sub_cat_id=" + subcats[0].id + "&fields=name,address,id,city_id,phone").
    success(function(placesData) {
      $scope.selectedPlaces = placesData;
      loadMap($scope.selectedPlaces, lat, lng, zoom);
    });
  }
};

//DistrictsCtrl.$inject = ['Districts'];
/*
function GalleriesCtrl(Galleries, Photographers, $routeParams) {
  this.photographer = Photographers.get({ photographer_id: $routeParams.photographer_id });
  this.galleries = Galleries.index({ photographer_id: $routeParams.photographer_id });
}
GalleriesCtrl.$inject = ['Galleries', 'Photographers', '$routeParams'];

function PhotosCtrl(Photos, Galleries, Photographers, SelectedPhotos, $routeParams) {
  var self = this;

  self.photographer = Photographers.get({ photographer_id: $routeParams.photographer_id });
  self.gallery = Galleries.get({ photographer_id: $routeParams.photographer_id, gallery_id: $routeParams.gallery_id });
  self.photos = Photos.index({ photographer_id: $routeParams.photographer_id, gallery_id: $routeParams.gallery_id });
  self.selected_photos = SelectedPhotos.index();


  self.selectPhoto = function(photo) {
    var selected_photo = new SelectedPhotos({ selected_photo: { photo_id: photo.id } });
    selected_photo.$create(function() {
      self.selected_photos.push(selected_photo);
    });
  }

  self.deleteSelectedPhoto = function(selected_photo) {
    angular.Array.remove(self.selected_photos, selected_photo);
    selected_photo.$destroy({ selected_photo_id: selected_photo.id });
  }

  self.saveSelectedPhoto = function(selected_photo) {
    selected_photo.$update({ selected_photo_id: selected_photo.id });
    $('input').blur();
  }

}
PhotosCtrl.$inject = ['Photos', 'Galleries', 'Photographers', 'SelectedPhotos', '$routeParams'];
*/